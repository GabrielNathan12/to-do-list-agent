name: CI/CD with Minikube and Helm

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest
        with:
          cache: false

      - name: Start Minikube
        run: |
          minikube start --driver=docker
          minikube status
          minikube kubectl -- get pods -A

      - name: Configure kubectl to use Minikube context
        run: |
          kubectl config use-context minikube
          kubectl config current-context

      - name: Export Minikube environment variables
        run: |
          eval $(minikube -p minikube docker-env)
          echo "Minikube Docker environment configured"

      - name: Install cert-manager
        run: |
          kubectl apply --validate=false -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.5/cert-manager.crds.yaml
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.12.5
          kubectl wait --namespace cert-manager --for=condition=available deployment/cert-manager --timeout=120s

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Deploy with Helm
        run: |
          helm upgrade --install demo ./k8s --wait
          helm list

      - name: Run Tests
        run: |
          minikube addons enable ingress 
          kubectl get all
          kubectl get ingress
